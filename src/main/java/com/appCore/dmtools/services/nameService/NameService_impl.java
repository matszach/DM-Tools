package com.appCore.dmtools.services.nameService;

import com.appCore.dmtools.services.nameService.nameGenerator.NameGenerator;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

/**
 * This class passes names generated by NameGenerator to
 * the AppController upon it's request
 */
@Service
public class NameService_impl implements NameService {

    // constants
    private static final String DEFAULT_MESSAGE = "Please generate some names first.";

    // fields
    private final NameGenerator generator;

    private String generatedNames;


    // constructor
    @Autowired
    public NameService_impl(NameGenerator generator){
        this.generator = generator;
    }


    // public methods
    /**
     * Uses name generator to create an array of names,
     * then converts them to a single string, separated by commas.
     * @param number - desired length of the generated array
     */
    @Override
    public void generateNames(int number) {
        generatedNames = nameArrayToSingleString(generator.generateNames(number));
    }

    /**
     * Returns generated names, or, if no names were generated yet, returns default message.
     * @return - generated names or the default message
     */
    @Override
    public String getResults() {
        if(generatedNames!=null && !generatedNames.isEmpty()){
            return generatedNames;
        } else {
            return DEFAULT_MESSAGE;
        }
    }

    /**
     * Clears result field
     */
    @Override
    public void reset() {
        generatedNames = null;
    }

    // private methods
    /**
     * Converts array of names to a single String,
     * while separating them by commas.
     * @param names - to-be-converted array of names
     * @return - list of names separated by commas
     */
    private String nameArrayToSingleString(String[] names) {
        StringBuilder listBuilder = new StringBuilder();
        for (int i = 0; i < names.length; i++) {
            listBuilder.append(names[i]);
            if (i < names.length - 1) {
                listBuilder.append(", ");
            }
        }
        return listBuilder.toString();
    }


}
